{"ast":null,"code":"var _jsxFileName = \"D:\\\\JavaOKTEN\\\\IdeaProjects\\\\REACT_lessons\\\\react_lesson8_2012_04_12\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; // https://www.youtube.com/watch?v=naIWIC9L3W0\n// Redux-1\n// 22:00\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  counter: 0\n}; // const reducer = (state = {counter: 0}, action) => {\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INC':\n      {\n        return { ...state,\n          counter: state.counter + 1\n        };\n      }\n\n    case 'DEC':\n      {\n        return { ...state,\n          counter: state.counter - 1\n        };\n      }\n\n    case 'RESET':\n      {\n        return { ...state,\n          counter: 0\n        };\n      }\n\n    default:\n      console.log('action', action.type, 'does not exist');\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nconsole.log('store', store); // store.subscribe(() => {\n//     console.log('tutt', store.getState())\n// })\n//\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'INC'})\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["D:/JavaOKTEN/IdeaProjects/REACT_lessons/react_lesson8_2012_04_12/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","Provider","initialState","counter","reducer","state","action","type","console","log","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;AACA;AACA;;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB,C,CAIA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AAAY;AACR,eAAO,EACH,GAAGF,KADA;AACOF,UAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AADhC,SAAP;AAGH;;AACD,SAAK,KAAL;AAAY;AACR,eAAO,EACH,GAAGE,KADA;AACOF,UAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AADhC,SAAP;AAGH;;AACD,SAAK,OAAL;AAAc;AACV,eAAO,EACH,GAAGE,KADA;AACOF,UAAAA,OAAO,EAAE;AADhB,SAAP;AAGH;;AACD;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAM,CAACC,IAA7B,EAAmC,gBAAnC;AACA,aAAOF,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,MAAMK,KAAK,GAAGV,WAAW,CAACI,OAAD,CAAzB;AACAI,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAb,QAAQ,CAACc,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAMIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ,E,CASA;AACA;AACA;;AACAd,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// https://www.youtube.com/watch?v=naIWIC9L3W0\n// Redux-1\n// 22:00\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\n\nconst initialState = {\n    counter: 0\n}\n\n// const reducer = (state = {counter: 0}, action) => {\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INC': {\n            return {\n                ...state, counter: state.counter + 1\n            }\n        }\n        case 'DEC': {\n            return {\n                ...state, counter: state.counter - 1\n            }\n        }\n        case 'RESET': {\n            return {\n                ...state, counter: 0\n            }\n        }\n        default:\n            console.log('action', action.type, 'does not exist');\n            return state;\n    }\n}\n\nconst store = createStore(reducer);\nconsole.log('store', store);\n\n// store.subscribe(() => {\n//     console.log('tutt', store.getState())\n// })\n//\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'INC'})\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}